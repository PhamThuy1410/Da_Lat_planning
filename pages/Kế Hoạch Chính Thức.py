import streamlit as st
import pandas as pd
import gspread
from google.oauth2.service_account import Credentials

# K·∫øt n·ªëi v·ªõi Google Sheets
SCOPES = ["https://www.googleapis.com/auth/spreadsheets"]
credentials = Credentials.from_service_account_info(st.secrets["gcp_service_account"], scopes=SCOPES)
gc = gspread.authorize(credentials)
SPREADSHEET_ID = "1pWDgcnuznQDXz-bOw1fttpZZP1-HWnW9nnznUsFHc7A"

def load_data(sheet_name):
    try:
        sh = gc.open_by_key(SPREADSHEET_ID)
        worksheet = sh.worksheet(sheet_name)
        data = worksheet.get_all_records()
        return pd.DataFrame(data)
    except Exception as e:
        st.error(f"L·ªói khi t·∫£i d·ªØ li·ªáu: {e}")
        return pd.DataFrame()

def save_data(sheet_name, df):
    try:
        sh = gc.open_by_key(SPREADSHEET_ID)
        worksheet = sh.worksheet(sheet_name)
        worksheet.clear()
        worksheet.update([df.columns.values.tolist()] + df.values.tolist())
        st.success("ƒê√£ l∆∞u th√†nh c√¥ng!")
    except Exception as e:
        st.error(f"L·ªói khi l∆∞u d·ªØ li·ªáu: {e}")

def main():
    st.title("Project: ƒê√† L·∫°t Planning")

    # Load danh s√°ch ng∆∞·ªùi tham gia
    st.header("Danh S√°ch Ng∆∞·ªùi Tham Gia")
    people_df = load_data("NguoiThamGia")
    if people_df.empty:
        people_df = pd.DataFrame({"STT": [], "H·ªç v√† T√™n": [], "Chi Ph√≠ (VNƒê)": []})
    
    people_df["STT"] = range(1, len(people_df) + 1)
    people_df["H·ªç v√† T√™n"] = people_df["H·ªç v√† T√™n"].astype(str)  # √âp ki·ªÉu v·ªÅ chu·ªói
    people_df = st.data_editor(people_df, num_rows="dynamic", key="people")
    
    
    total_people = people_df["H·ªç v√† T√™n"].nunique()
    total_cost_people = people_df["Chi Ph√≠ (VNƒê)"].sum()
    
    if st.button("L∆∞u Danh S√°ch Ng∆∞·ªùi Tham Gia"):
        save_data("NguoiThamGia", people_df)

    # KPI Cards
    col1, col2 = st.columns(2)
    with col1:
        st.metric(label="üë• T·ªïng S·ªë Ng∆∞·ªùi Tham Gia", value=total_people)
    with col2:
        st.metric(label="üí∞ T·ªïng Chi Ph√≠ Ng∆∞·ªùi Tham Gia", value=f"{int(total_cost_people):,} VND")

    # B·∫£ng chi ph√≠
    st.header("B·∫£ng Chi Ph√≠")
    chi_phi_df = load_data("ChiPhi_LichTrinh")
    if chi_phi_df.empty:
        chi_phi_df = pd.DataFrame({
            "Kho·∫£n Chi": ["Ti·ªÅn xe kh√°ch", "Ti·ªÅn xƒÉng", "Ti·ªÅn thu√™ xe m√°y", "Ti·ªÅn kh√°ch s·∫°n", "Chi ph√≠ kh√°c"],
            "S·ªë Ti·ªÅn (VND)": [0, 0, 0, 0, 0]
        })
    chi_phi_df = st.data_editor(chi_phi_df, num_rows="dynamic", key="chi_phi")
    
    total_cost = chi_phi_df["S·ªë Ti·ªÅn (VND)"].sum()
    st.write(f"### T·ªïng Chi Ph√≠: {total_cost:,} VND")
    
    if st.button("L∆∞u Chi Ph√≠"):
        save_data("ChiPhi_LichTrinh", chi_phi_df)

    # B·∫£ng k·∫ø ho·∫°ch l·ªãch tr√¨nh
    st.header("K·∫ø Ho·∫°ch L·ªãch Tr√¨nh")
    plan_df = load_data("LichTrinh")
    if plan_df.empty:
        plan_df = pd.DataFrame({
            "Ng√†y": [""],
            "Th·ªùi Gian": [""],
            "ƒê·ªãa ƒêi·ªÉm": [""],
            "Link tham kh·∫£o": [""],
            "∆Ø·ªõc T√≠nh Chi Ph√≠ (VND)": [0]
        })
    plan_df = st.data_editor(plan_df, num_rows="dynamic", key="plan")
    
    total_plan_cost = plan_df["∆Ø·ªõc T√≠nh Chi Ph√≠ (VND)"].sum()
    st.write(f"### T·ªïng ∆Ø·ªõc T√≠nh Chi Ph√≠ L·ªãch Tr√¨nh: {int(total_plan_cost):,} VND")
    
    if st.button("L∆∞u L·ªãch Tr√¨nh"):
        save_data("LichTrinh", plan_df)

    # Xu·∫•t file CSV
    st.download_button(
        label="T·∫£i Xu·ªëng K·∫ø Ho·∫°ch (.csv)",
        data=plan_df.to_csv(index=False).encode('utf-8'),
        file_name="ke_hoach_du_lich.csv",
        mime="text/csv"
    )

if __name__ == "__main__":
    main()
